import telebot
from telebot import types
import random
import datetime
import time
import logging
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('AkameBot')

bot = telebot.TeleBot('8353863888:AAF255dYhhiihQR_-A_x9_rSJJZcJaTJhHs')

# RP –¥–µ–π—Å—Ç–≤–∏—è
slap_actions = ["—à–ª—ë–ø–Ω—É–ª(–∞)", "–¥–∞–ª(–∞) –ø–æ–¥–∑–∞—Ç—ã–ª—å–Ω–∏–∫", "–æ—Ç—Ö–ª–µ—Å—Ç–∞–ª(–∞)"]
kiss_actions = ["–ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞)", "—á–º–æ–∫–Ω—É–ª(–∞)", "–Ω–µ–∂–Ω–æ –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞)"]
kill_actions = ["—É–±–∏–ª(–∞)", "–ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–ª(–∞)", "—É–Ω–∏—á—Ç–æ–∂–∏–ª(–∞)", "–ø—Ä–∏–∫–æ–Ω—á–∏–ª(–∞)"]
hug_actions = ["–æ–±–Ω—è–ª(–∞)", "–ø—Ä–∏–∂–∞–ª(–∞) –∫ –≥—Ä—É–¥–∏", "–æ–±–Ω—è–ª(–∞) –∫—Ä–µ–ø–∫–æ"]
myr_actions = ["–ø–æ–º—É—Ä-—Ä-—Ä-—Ä—á–∞–ª(–∞)"]

# –°–ø–∏—Å–æ–∫ ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID)
MODERATOR_IDS = [
    123456789,  # –∑–∞–º–µ–Ω–∏ –Ω–∞ ID –ø–µ—Ä–≤–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    987654321,  # –∑–∞–º–µ–Ω–∏ –Ω–∞ ID –≤—Ç–æ—Ä–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    # –¥–æ–±–∞–≤—å –±–æ–ª—å—à–µ ID –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
]

# ID —Å–æ–∑–¥–∞—Ç–µ–ª—è (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π ID)
CREATOR_ID = 6695319414

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {user_id: unmute_time}
muted_users = {}

# –ì–∏—Ñ–∫–∏
kiss_gifs = [
    "https://media.giphy.com/media/jR22gdcPiOLaE/giphy.gif",
    "https://media3.giphy.com/media/zkppEMFvRX5FC/giphy.gif",
]

hug_gifs = [
    "https://media.giphy.com/media/od5H3PmEG5EVq/giphy.gif",
    "https://media4.giphy.com/media/u9BxQbM5bxvwY/giphy.gif",
]

myr_gifs = [
    ""
]

slap_gifs = [
    "https://media.giphy.com/media/Zau0yrl17uzdK/giphy.gif",  
    "https://media.giphy.com/media/Gf3AUz3eBNbTW/giphy.gif",  
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
glav = types.InlineKeyboardMarkup()
help_btn = types.InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data='help')
new_btn = types.InlineKeyboardButton("–ù–æ–≤–∏–Ω–∫–∞", callback_data='new')
glav.add(help_btn, new_btn)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
def is_moderator(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"""
    return user_id in MODERATOR_IDS or user_id == CREATOR_ID

def is_creator(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º"""
    return user_id == CREATOR_ID

def get_time_from_string(time_str):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥—ã"""
    if not time_str[:-1].isdigit():
        return None

    time_number = int(time_str[:-1])
    time_unit = time_str[-1].lower()

    if time_unit == 's':  # —Å–µ–∫—É–Ω–¥—ã
        return time_number
    elif time_unit == 'm':  # –º–∏–Ω—É—Ç—ã
        return time_number * 60
    elif time_unit == 'h':  # —á–∞—Å—ã
        return time_number * 3600
    elif time_unit == 'd':  # –¥–Ω–∏
        return time_number * 86400
    elif time_unit == 'w':  # –Ω–µ–¥–µ–ª–∏
        return time_number * 604800
    else:
        return None

def get_display_time(time_str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    time_number = int(time_str[:-1])
    time_unit = time_str[-1].lower()

    if time_unit == 's':
        return f"{time_number} —Å–µ–∫—É–Ω–¥"
    elif time_unit == 'm':
        return f"{time_number} –º–∏–Ω—É—Ç"
    elif time_unit == 'h':
        return f"{time_number} —á–∞—Å–æ–≤"
    elif time_unit == 'd':
        return f"{time_number} –¥–Ω–µ–π"
    elif time_unit == 'w':
        return f"{time_number} –Ω–µ–¥–µ–ª—å"
    return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è"

def log_command(user_id, username, command, target=None, result="—É—Å–ø–µ—à–Ω–æ"):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥"""
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞: {command} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} (ID: {user_id}) | –¶–µ–ª—å: {target} | –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

def delete_message_after_delay(chat_id, message_id, delay=15):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥"""
    def delete():
        time.sleep(delay)
        try:
            bot.delete_message(chat_id, message_id)
            logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ {message_id} —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {delay} —Å–µ–∫—É–Ω–¥")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id}: {e}")

    thread = threading.Thread(target=delete)
    thread.daemon = True
    thread.start()

def send_message_with_auto_delete(chat_id, text, parse_mode=None, reply_to_message_id=None, delay=15):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
    try:
        sent_message = bot.send_message(chat_id, text, parse_mode=parse_mode, reply_to_message_id=reply_to_message_id)
        delete_message_after_delay(chat_id, sent_message.message_id, delay)
        return sent_message
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return None

def reply_with_auto_delete(message, text, parse_mode=None, delay=15):
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
    try:
        sent_message = bot.reply_to(message, text, parse_mode=parse_mode)
        delete_message_after_delay(message.chat.id, sent_message.message_id, delay)
        return sent_message
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        return None

def send_animation_with_auto_delete(chat_id, animation, caption=None, delay=15):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –µ—ë —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
    try:
        sent_message = bot.send_animation(chat_id, animation, caption=caption)
        delete_message_after_delay(chat_id, sent_message.message_id, delay)
        return sent_message
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∏–º–∞—Ü–∏–∏: {e}")
        return None

def get_user_id_by_username(chat_id, username):
    """–ü–æ–ª—É—á–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É –≤ —á–∞—Ç–µ"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–∞—Ç–∞
        admins = bot.get_chat_administrators(chat_id)

        # –ò—â–µ–º —Å—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        for admin in admins:
            if admin.user.username and admin.user.username.lower() == username.lower():
                return admin.user.id

        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        # –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –±–æ–ª—å—à–∏—Ö —á–∞—Ç–∞—Ö
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤. –ü–æ–∏—Å–∫ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.")
        return None

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}: {e}")
        return None

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == 'help':
        logger.info(f"Callback: help | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {call.from_user.username} (ID: {call.from_user.id})")
        bot.send_message(call.message.chat.id, 
        '''üéÆ *–°–ü–†–ê–í–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–ú* üéÆ

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ!

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë              üéØ–ö–û–ú–ê–ù–î–´ –ë–û–¢–ê              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
‚Ä¢ üî´ `a:kill [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üÜï `a:new` ‚Äî —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
‚Ä¢ ü§ó `a:hug [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî –æ–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üíã `a:kiss [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üòª `a:myr [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî –ø–æ–º—É—Ä—á–∞—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üëã `a:slap [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî —à–ª–µ–ø–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë           ‚ö°–ú–û–î–ï–†–°–ö–ò–ï –ö–û–ú–ê–ù–î–´           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
‚Ä¢ üîá `!mute @—é–∑–µ—Ä–Ω–µ–π–º –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞` ‚Äî –∑–∞–º—É—Ç–∏—Ç—å –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
‚Ä¢ üîá `!mute –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞` ‚Äî –∑–∞–º—É—Ç–∏—Ç—å (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
‚Ä¢ üîä `!unmute` ‚Äî —Ä–∞–∑–º—É—Ç–∏—Ç—å (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
‚Ä¢ üìã `a:staffcmd` ‚Äî —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥

*–í—Ä–µ–º—è:*
s - —Å–µ–∫—É–Ω–¥–∞ | m - –º–∏–Ω—É—Ç–∞ | h - —á–∞—Å
d - –¥–µ–Ω—å   | w - –Ω–µ–¥–µ–ª—è

*–ü—Ä–∏–º–µ—Ä—ã:*
`!mute @username 5m —Å–ø–∞–º`
–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–ø–∏—à–∏ `!mute 5m —Å–ø–∞–º`

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                  üë®‚Äçüíª –°–û–ó–î–ê–¢–ï–õ–¨                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üî• @treplebeska''', parse_mode='Markdown')

    elif call.data == 'new':
        logger.info(f"Callback: new | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {call.from_user.username} (ID: {call.from_user.id})")
        bot.send_message(call.message.chat.id, 
        '''üè¥‚Äç‚ò†Ô∏è –ù–û–í–ò–ù–ö–ê!!!

üóì –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ 02.10.2025

ü¶æ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã:

a:kill
a:hug
a:kiss
a:slap
a:myr
!mute (—á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç –∏ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É)
!unmute (—á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç)
a:staffcmd

üé¨ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:

‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω –º—É—Ç –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
‚Ä¢ –¢–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ `akame:` –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å `a:`
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω –ù–ê–°–¢–û–Ø–©–ò–ô –º—É—Ç —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è!''')

@bot.message_handler(commands=['start'])
def start(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞: /start | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id}) | –ß–∞—Ç: {message.chat.id}")
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç —è –ê–∫–∞–º–µ.\n–Ø —Å–æ–∑–¥–∞–Ω–∞ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –≥—Ä—É–ø–ø—É –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è!\n\n(–¥·¥Ä–Ω–Ω—ã–π –±–æ·¥õ –Ω·¥Ä—Ö–æ–¥–∏·¥õ—å·¥Ñ—è  ô ·¥©·¥Ä–∑·¥©·¥Ä–±–æ·¥õ·¥ã·¥á, ·¥®–æœ∂·¥õ–æ ç—É  ç–æ·¥¶—É·¥õ –±—ã·¥õ—å –±·¥Ä·¥¶–∏ –∏ —á·¥Ä·¥Ñ·¥õ–æ  ô—ã·¥ã·¥ß—é—á·¥á–Ω.)', reply_markup=glav)

# –†–ü –ö–û–ú–ê–ù–î–´ (–±–µ–∑ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è)
# kill –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(func=lambda message: message.text.startswith('a:kill'))
def kill_rp(message):
    try:
        target = message.text.replace('a:kill', '').strip()
        if not target:
            log_command(message.from_user.id, message.from_user.username, 'a:kill', result='–æ—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–ª—å')
            bot.reply_to(message, '‚ùå –£–∫–∞–∂–∏ –∫–æ–≥–æ —É–±–∏—Ç—å: `a:kill [–∏–º—è]`')
            return

        killer = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        action = random.choice(kill_actions)

        log_command(message.from_user.id, message.from_user.username, 'a:kill', target)
        bot.reply_to(message, f'‚öîÔ∏è {killer} {action} {target}!')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ a:kill: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        bot.reply_to(message, f'‚ùå –û—à–∏–±–∫–∞: {e}')

# hug –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(func=lambda message: message.text.startswith('a:hug'))
def hug_rp(message):
    try:
        target = message.text.replace('a:hug', '').strip()
        if not target:
            log_command(message.from_user.id, message.from_user.username, 'a:hug', result='–æ—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–ª—å')
            bot.reply_to(message, '‚ùå –£–∫–∞–∂–∏ –∫–æ–≥–æ –æ–±–Ω—è—Ç—å: `a:hug [–∏–º—è]`')
            return

        hugger = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        action = random.choice(hug_actions)
        gif = random.choice(hug_gifs)

        log_command(message.from_user.id, message.from_user.username, 'a:hug', target)
        bot.send_animation(message.chat.id, gif, caption=f'ü§ó {hugger} {action} {target}!')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ a:hug: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        bot.reply_to(message, f'‚ùå –û—à–∏–±–∫–∞: {e}')

# kiss –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(func=lambda message: message.text.startswith('a:kiss'))
def kiss_rp(message):
    try:
        target = message.text.replace('a:kiss', '').strip()
        if not target:
            log_command(message.from_user.id, message.from_user.username, 'a:kiss', result='–æ—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–ª—å')
            bot.reply_to(message, '‚ùå –£–∫–∞–∂–∏ –∫–æ–≥–æ –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å: `a:kiss [–∏–º—è]`')
            return

        kisser = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        action = random.choice(kiss_actions)
        gif = random.choice(kiss_gifs)

        log_command(message.from_user.id, message.from_user.username, 'a:kiss', target)
        bot.send_animation(message.chat.id, gif, caption=f'üíã {kisser} {action} {target}!')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ a:kiss: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        bot.reply_to(message, f'‚ùå –û—à–∏–±–∫–∞: {e}')

# myr –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(func=lambda message: message.text.startswith('a:myr'))
def myr_rp(message):
    try:
        target = message.text.replace('a:myr', '').strip()
        if not target:
            log_command(message.from_user.id, message.from_user.username, 'a:myr', result='–æ—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–ª—å')
            bot.reply_to(message, '‚ùå –£–∫–∞–∂–∏ –∫–æ–º—É –ø–æ–º—É—Ä—á–∞—Ç—å:3: `a:myr [–∏–º—è]`')
            return

        myrer = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        action = random.choice(myr_actions)
        gif = random.choice(myr_gifs)

        log_command(message.from_user.id, message.from_user.username, 'a:myr', target)
        if gif:
            bot.send_animation(message.chat.id, gif, caption=f'üòª {myrer} {action} {target} :3')
        else:
            bot.reply_to(message, f'üòª {myrer} {action} {target} :3')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ a:myr: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        bot.reply_to(message, f'‚ùå –û—à–∏–±–∫–∞: {e}')

# slap –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(func=lambda message: message.text.startswith('a:slap'))
def slap_rp(message):
    try:
        target = message.text.replace('a:slap', '').strip()
        if not target:
            log_command(message.from_user.id, message.from_user.username, 'a:slap', result='–æ—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–ª—å')
            bot.reply_to(message, '‚ùå –£–∫–∞–∂–∏ –∫–æ–≥–æ —à–ª–µ–ø–Ω—É—Ç—å: `a:slap [–∏–º—è]`')
            return

        slapper = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        action = random.choice(slap_actions)
        gif = random.choice(slap_gifs)

        log_command(message.from_user.id, message.from_user.username, 'a:slap', target)
        bot.send_animation(message.chat.id, gif, caption=f'üëã {slapper} {action} {target}!')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ a:slap: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        bot.reply_to(message, f'‚ùå –û—à–∏–±–∫–∞: {e}')

# –ö–û–ú–ê–ù–î–ê STAFFCMD - —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(func=lambda message: message.text.startswith('a:staffcmd'))
def staffcmd(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.from_user.id
        if not is_moderator(user_id):
            log_command(message.from_user.id, message.from_user.username, 'a:staffcmd', result='–æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
            reply_with_auto_delete(message, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
            return

        log_command(message.from_user.id, message.from_user.username, 'a:staffcmd')
        staff_commands = """üõ° *–ú–û–î–ï–†–°–ö–ò–ï –ö–û–ú–ê–ù–î–´*

üîá *–ú—É—Ç (–¥–≤–∞ —Å–ø–æ—Å–æ–±–∞):*
‚Ä¢ `!mute @—é–∑–µ—Ä–Ω–µ–π–º –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞` - –∑–∞–º—É—Ç–∏—Ç—å –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
‚Ä¢ `!mute –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞` - –∑–∞–º—É—Ç–∏—Ç—å (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
‚Ä¢ `!unmute` - —Ä–∞–∑–º—É—Ç–∏—Ç—å (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)

üëÆ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏:*
‚Ä¢ `!addmod ID` - –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
‚Ä¢ `!delmod ID` - —É–¥–∞–ª–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞  
‚Ä¢ `!modlist` - —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤

*–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º—É—Ç–∞:*
1. `!mute @username 5m —Å–ø–∞–º`
2. –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–ø–∏—à–∏ `!mute 5m —Å–ø–∞–º`

*–í—Ä–µ–º—è:*
s - —Å–µ–∫—É–Ω–¥—ã, m - –º–∏–Ω—É—Ç—ã, h - —á–∞—Å—ã, d - –¥–Ω–∏, w - –Ω–µ–¥–µ–ª–∏"""

        reply_with_auto_delete(message, staff_commands, parse_mode='Markdown')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ a:staffcmd: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞: {str(e)}')

# üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ö–û–ú–ê–ù–î–ê MUTE –ü–û –Æ–ó–ï–†–ù–ï–ô–ú–£
@bot.message_handler(func=lambda message: message.text.startswith('!mute') and not message.reply_to_message)
def mute_username_command(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤ –≥—Ä—É–ø–ø–µ
        if message.chat.type not in ['group', 'supergroup']:
            reply_with_auto_delete(message, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.from_user.id
        if not is_moderator(user_id):
            log_command(message.from_user.id, message.from_user.username, '!mute @username', result='–æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
            reply_with_auto_delete(message, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        chat_member = bot.get_chat_member(message.chat.id, bot.get_me().id)
        if not chat_member.status == 'administrator':
            reply_with_auto_delete(message, '‚ùå –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!')
            return

        parts = message.text.split()
        if len(parts) < 4:
            reply_with_auto_delete(message, '‚ùå –§–æ—Ä–º–∞—Ç: `!mute @—é–∑–µ—Ä–Ω–µ–π–º –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞`\n\n*–ü—Ä–∏–º–µ—Ä:*\n`!mute @username 5m —Å–ø–∞–º`')
            return

        username = parts[1]
        time_str = parts[2]
        reason = ' '.join(parts[3:])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
        mute_seconds = get_time_from_string(time_str)
        if mute_seconds is None:
            reply_with_auto_delete(message, '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!\n*–ü—Ä–∏–º–µ—Ä—ã:*\n`30s` - 30 —Å–µ–∫—É–Ω–¥\n`5m` - 5 –º–∏–Ω—É—Ç\n`1h` - 1 —á–∞—Å\n`2d` - 2 –¥–Ω—è\n`1w` - 1 –Ω–µ–¥–µ–ª—è')
            return

        # –£–±–∏—Ä–∞–µ–º @ –∏–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
        if username.startswith('@'):
            username = username[1:]

        moderator = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        time_display = get_display_time(time_str)

        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê: –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
        target_user_id = get_user_id_by_username(message.chat.id, username)

        if not target_user_id:
            reply_with_auto_delete(message, f'‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞.')
            return

        target_username_full = f"@{username}"

        # üî• –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        try:
            target_chat_member = bot.get_chat_member(message.chat.id, target_user_id)
            if target_chat_member.status in ['administrator', 'creator']:
                reply_with_auto_delete(message, f'‚ùå –ù–µ –º–æ–≥—É –∑–∞–º—É—Ç–∏—Ç—å {target_username_full} - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞!')
                return
        except Exception as admin_check_error:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {admin_check_error}")
            reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(admin_check_error)}')
            return

        # üî• –ù–ê–°–¢–û–Ø–©–ò–ô –ú–£–¢ –ß–ï–†–ï–ó TELEGRAM API
        try:
            until_date = int(time.time()) + mute_seconds

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=target_user_id,
                until_date=until_date,
                permissions=types.ChatPermissions(
                    can_send_messages=False,
                    can_send_media_messages=False,
                    can_send_polls=False,
                    can_send_other_messages=False,
                    can_add_web_page_previews=False,
                    can_change_info=False,
                    can_invite_users=False,
                    can_pin_messages=False
                )
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö
            muted_users[target_user_id] = until_date

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –£–°–ü–ï–®–ù–û–ú –º—É—Ç–µ
            mute_message = f"""üîá *–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ó–ê–ú–£–ß–ï–ù*

üë§ *–ù–∞–∫–∞–∑–∞–Ω–Ω—ã–π:* {target_username_full}
üõ° *–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:* {moderator}
‚è∞ *–í—Ä–µ–º—è:* {time_display}
üìù *–ü—Ä–∏—á–∏–Ω–∞:* {reason}

‚úÖ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω –Ω–∞ {time_display}!*"""

            log_command(message.from_user.id, message.from_user.username, '!mute @username', f"@{username}", "—É—Å–ø–µ—à–Ω–æ")
            reply_with_auto_delete(message, mute_message, parse_mode='Markdown')

        except Exception as api_error:
            logger.error(f"–û—à–∏–±–∫–∞ API –≤ !mute @username: {api_error} | –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {message.from_user.username} (ID: {message.from_user.id})")
            reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ —á–µ—Ä–µ–∑ Telegram API: {str(api_error)}')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ !mute @username: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# üî• –°–¢–ê–†–ê–Ø –ö–û–ú–ê–ù–î–ê MUTE –ß–ï–†–ï–ó –û–¢–í–ï–¢ –ù–ê –°–û–û–ë–©–ï–ù–ò–ï (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞)
@bot.message_handler(func=lambda message: message.text.startswith('!mute') and message.reply_to_message)
def mute_reply_command(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤ –≥—Ä—É–ø–ø–µ
        if message.chat.type not in ['group', 'supergroup']:
            reply_with_auto_delete(message, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.from_user.id
        if not is_moderator(user_id):
            log_command(message.from_user.id, message.from_user.username, '!mute reply', result='–æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
            reply_with_auto_delete(message, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        chat_member = bot.get_chat_member(message.chat.id, bot.get_me().id)
        if not chat_member.status == 'administrator':
            reply_with_auto_delete(message, '‚ùå –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!')
            return

        parts = message.text.split()
        if len(parts) < 3:
            reply_with_auto_delete(message, '‚ùå –§–æ—Ä–º–∞—Ç: `!mute –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞` (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)\n\n*–ü—Ä–∏–º–µ—Ä:*\n`!mute 5m —Å–ø–∞–º`')
            return

        time_str = parts[1]
        reason = ' '.join(parts[2:])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
        mute_seconds = get_time_from_string(time_str)
        if mute_seconds is None:
            reply_with_auto_delete(message, '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!\n*–ü—Ä–∏–º–µ—Ä—ã:*\n`30s` - 30 —Å–µ–∫—É–Ω–¥\n`5m` - 5 –º–∏–Ω—É—Ç\n`1h` - 1 —á–∞—Å\n`2d` - 2 –¥–Ω—è\n`1w` - 1 –Ω–µ–¥–µ–ª—è')
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        target_user_id = message.reply_to_message.from_user.id
        target_username = f"@{message.reply_to_message.from_user.username}" if message.reply_to_message.from_user.username else message.reply_to_message.from_user.first_name
        moderator = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        time_display = get_display_time(time_str)

        # üî• –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        try:
            target_chat_member = bot.get_chat_member(message.chat.id, target_user_id)
            if target_chat_member.status in ['administrator', 'creator']:
                reply_with_auto_delete(message, f'‚ùå –ù–µ –º–æ–≥—É –∑–∞–º—É—Ç–∏—Ç—å {target_username} - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞!')
                return
        except Exception as admin_check_error:
            reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(admin_check_error)}')
            return

        # üî• –ù–ê–°–¢–û–Ø–©–ò–ô –ú–£–¢ –ß–ï–†–ï–ó TELEGRAM API
        try:
            # –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º Unix timestamp –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º—É—Ç–∞
            until_date = int(time.time()) + mute_seconds

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=target_user_id,
                until_date=until_date,
                permissions=types.ChatPermissions(
                    can_send_messages=False,
                    can_send_media_messages=False,
                    can_send_polls=False,
                    can_send_other_messages=False,
                    can_add_web_page_previews=False,
                    can_change_info=False,
                    can_invite_users=False,
                    can_pin_messages=False
                )
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö
            muted_users[target_user_id] = until_date

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –£–°–ü–ï–®–ù–û–ú –º—É—Ç–µ
            mute_message = f"""üîá *–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ó–ê–ú–£–ß–ï–ù*

üë§ *–ù–∞–∫–∞–∑–∞–Ω–Ω—ã–π:* {target_username}
üõ° *–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:* {moderator}
‚è∞ *–í—Ä–µ–º—è:* {time_display}
üìù *–ü—Ä–∏—á–∏–Ω–∞:* {reason}

‚úÖ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω –Ω–∞ {time_display}!*"""

            log_command(message.from_user.id, message.from_user.username, '!mute reply', target_username, "—É—Å–ø–µ—à–Ω–æ")
            reply_with_auto_delete(message, mute_message, parse_mode='Markdown')

        except Exception as api_error:
            logger.error(f"–û—à–∏–±–∫–∞ API –≤ !mute reply: {api_error} | –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {message.from_user.username} (ID: {message.from_user.id})")
            reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ —á–µ—Ä–µ–∑ Telegram API: {str(api_error)}')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ !mute reply: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# üî• –ù–ê–°–¢–û–Ø–©–ê–Ø –ö–û–ú–ê–ù–î–ê UNMUTE –ß–ï–†–ï–ó –û–¢–í–ï–¢ –ù–ê –°–û–û–ë–©–ï–ù–ò–ï
@bot.message_handler(func=lambda message: message.text.startswith('!unmute') and message.reply_to_message)
def unmute_reply_command(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤ –≥—Ä—É–ø–ø–µ
        if message.chat.type not in ['group', 'supergroup']:
            reply_with_auto_delete(message, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.from_user.id
        if not is_moderator(user_id):
            log_command(message.from_user.id, message.from_user.username, '!unmute', result='–æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
            reply_with_auto_delete(message, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        target_user_id = message.reply_to_message.from_user.id
        target_username = f"@{message.reply_to_message.from_user.username}" if message.reply_to_message.from_user.username else message.reply_to_message.from_user.first_name
        moderator = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name

        # üî• –ù–ê–°–¢–û–Ø–©–ò–ô –†–ê–ó–ú–£–¢ –ß–ï–†–ï–ó TELEGRAM API
        try:
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º until_date –Ω–∞ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è + 1 —Å–µ–∫—É–Ω–¥–∞)
            bot.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=target_user_id,
                until_date=int(time.time()) + 1,
                permissions=types.ChatPermissions(
                    can_send_messages=True,
                    can_send_media_messages=True,
                    can_send_polls=True,
                    can_send_other_messages=True,
                    can_add_web_page_previews=True,
                    can_change_info=False,
                    can_invite_users=False,
                    can_pin_messages=False
                )
            )

            # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–º—É—á–µ–Ω–Ω—ã—Ö
            if target_user_id in muted_users:
                del muted_users[target_user_id]

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –£–°–ü–ï–®–ù–û–ú —Ä–∞–∑–º—É—Ç–µ
            unmute_message = f"""üîä *–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –†–ê–ó–ú–£–ß–ï–ù*

üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {target_username}
üõ° *–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:* {moderator}

‚úÖ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω!*"""

            log_command(message.from_user.id, message.from_user.username, '!unmute', target_username, "—É—Å–ø–µ—à–Ω–æ")
            reply_with_auto_delete(message, unmute_message, parse_mode='Markdown')

        except Exception as api_error:
            logger.error(f"–û—à–∏–±–∫–∞ API –≤ !unmute: {api_error} | –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {message.from_user.username} (ID: {message.from_user.id})")
            reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º—É—Ç–µ —á–µ—Ä–µ–∑ Telegram API: {str(api_error)}')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ !unmute: {e} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}')

# –ö–û–ú–ê–ù–î–ê –î–õ–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ú–û–î–ï–†–ê–¢–û–†–û–í (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)
@bot.message_handler(func=lambda message: message.text.startswith('!addmod'))
def add_moderator(message):
    try:
        user_id = message.from_user.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å
        if not is_creator(user_id):
            log_command(message.from_user.id, message.from_user.username, '!addmod', result='–æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
            reply_with_auto_delete(message, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è!')
            return

        parts = message.text.split()
        if len(parts) != 2:
            reply_with_auto_delete(message, '‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: `!addmod ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`')
            return

        new_mod_id = int(parts[1])

        # –î–æ–±–∞–≤–ª—è–µ–º ID –≤ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
        if new_mod_id not in MODERATOR_IDS:
            MODERATOR_IDS.append(new_mod_id)
            log_command(message.from_user.id, message.from_user.username, '!addmod', f"ID: {new_mod_id}", "—É—Å–ø–µ—à–Ω–æ")
            reply_with_auto_delete(message, f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_mod_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã!')
        else:
            log_command(message.from_user.id, message.from_user.username, '!addmod', f"ID: {new_mod_id}", "—É–∂–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä")
            reply_with_auto_delete(message, f'‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!')

    except ValueError:
        log_command(message.from_user.id, message.from_user.username, '!addmod', result='–æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ ID')
        reply_with_auto_delete(message, '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID!')
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ !addmod: {e} | –°–æ–∑–¥–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞: {str(e)}')

# –ö–û–ú–ê–ù–î–ê –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –ú–û–î–ï–†–ê–¢–û–†–û–í (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)
@bot.message_handler(func=lambda message: message.text.startswith('!delmod'))
def delete_moderator(message):
    try:
        user_id = message.from_user.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å
        if not is_creator(user_id):
            log_command(message.from_user.id, message.from_user.username, '!delmod', result='–æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
            reply_with_auto_delete(message, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è!')
            return

        parts = message.text.split()
        if len(parts) != 2:
            reply_with_auto_delete(message, '‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: `!delmod ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`')
            return

        del_mod_id = int(parts[1])

        # –£–¥–∞–ª—è–µ–º ID –∏–∑ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
        if del_mod_id in MODERATOR_IDS and del_mod_id != CREATOR_ID:
            MODERATOR_IDS.remove(del_mod_id)
            log_command(message.from_user.id, message.from_user.username, '!delmod', f"ID: {del_mod_id}", "—É—Å–ø–µ—à–Ω–æ")
            reply_with_auto_delete(message, f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {del_mod_id} —É–¥–∞–ª–µ–Ω –∏–∑ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤!')
        elif del_mod_id == CREATOR_ID:
            log_command(message.from_user.id, message.from_user.username, '!delmod', f"ID: {del_mod_id}", "–ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è")
            reply_with_auto_delete(message, '‚ùå –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è!')
        else:
            log_command(message.from_user.id, message.from_user.username, '!delmod', f"ID: {del_mod_id}", "–Ω–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä")
            reply_with_auto_delete(message, f'‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!')

    except ValueError:
        log_command(message.from_user.id, message.from_user.username, '!delmod', result='–æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ ID')
        reply_with_auto_delete(message, '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID!')
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ !delmod: {e} | –°–æ–∑–¥–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞: {str(e)}')

# –ö–û–ú–ê–ù–î–ê –î–õ–Ø –ü–†–û–°–ú–û–¢–†–ê –ú–û–î–ï–†–ê–¢–û–†–û–í (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)
@bot.message_handler(func=lambda message: message.text.startswith('!modlist'))
def moderator_list(message):
    try:
        user_id = message.from_user.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å
        if not is_creator(user_id):
            log_command(message.from_user.id, message.from_user.username, '!modlist', result='–æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ')
            reply_with_auto_delete(message, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è!')
            return

        mod_list = "\n".join([f"‚Ä¢ {mod_id}" for mod_id in MODERATOR_IDS])
        log_command(message.from_user.id, message.from_user.username, '!modlist')
        reply_with_auto_delete(message, f'üìã *–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:*\n{mod_list}\n\n*–°–æ–∑–¥–∞—Ç–µ–ª—å:* {CREATOR_ID}', parse_mode='Markdown')

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ !modlist: {e} | –°–æ–∑–¥–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id})")
        reply_with_auto_delete(message, f'‚ùå –û—à–∏–±–∫–∞: {str(e)}')

# –û–ë–©–ò–ï –ö–û–ú–ê–ù–î–´
@bot.message_handler(func=lambda message: message.text.lower() == 'a:help')
def help_cmd(message):
    log_command(message.from_user.id, message.from_user.username, 'a:help')
    send_message_with_auto_delete(message.chat.id, '''üéÆ *–°–ü–†–ê–í–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–ú* üéÆ

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ!

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë              üéØ–ö–û–ú–ê–ù–î–´ –ë–û–¢–ê              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
‚Ä¢ üî´ `a:kill [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üÜï `a:new` ‚Äî —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
‚Ä¢ ü§ó `a:hug [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî –æ–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üíã `a:kiss [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üòª `a:myr [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî –ø–æ–º—É—Ä—á–∞—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ üëã `a:slap [—é–∑–µ—Ä–Ω–µ–π–º]` ‚Äî —à–ª–µ–ø–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë           ‚ö°–ú–û–î–ï–†–°–ö–ò–ï –ö–û–ú–ê–ù–î–´           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
‚Ä¢ üîá `!mute @—é–∑–µ—Ä–Ω–µ–π–º –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞` ‚Äî –∑–∞–º—É—Ç–∏—Ç—å –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
‚Ä¢ üîá `!mute –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞` ‚Äî –∑–∞–º—É—Ç–∏—Ç—å (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
‚Ä¢ üîä `!unmute` ‚Äî —Ä–∞–∑–º—É—Ç–∏—Ç—å (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
‚Ä¢ üìã `a:staffcmd` ‚Äî —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥

*–í—Ä–µ–º—è:*
s - —Å–µ–∫—É–Ω–¥–∞ | m - –º–∏–Ω—É—Ç–∞ | h - —á–∞—Å
d - –¥–µ–Ω—å   | w - –Ω–µ–¥–µ–ª—è

*–ü—Ä–∏–º–µ—Ä—ã:*
`!mute @username 5m —Å–ø–∞–º`
–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–ø–∏—à–∏ `!mute 5m —Å–ø–∞–º`

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                  üë®‚Äçüíª –°–û–ó–î–ê–¢–ï–õ–¨                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üî• @treplebeska''', parse_mode='Markdown')

@bot.message_handler(func=lambda message: message.text.lower() == 'a:new')
def new_cmd(message):
    log_command(message.from_user.id, message.from_user.username, 'a:new')
    send_message_with_auto_delete(message.chat.id, 
    '''üè¥‚Äç‚ò†Ô∏è –ù–û–í–ò–ù–ö–ê!!!

üóì –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ 02.10.2025

ü¶æ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã:

a:kill
a:hug
a:kiss
a:slap
a:myr
!mute (—á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç –∏ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É)
!unmute (—á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç)
a:staffcmd

üé¨ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:

‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω –º—É—Ç –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
‚Ä¢ –¢–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ `akame:` –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å `a:`
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω –ù–ê–°–¢–û–Ø–©–ò–ô –º—É—Ç —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è!''')

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
@bot.message_handler(func=lambda message: True)
def log_all_messages(message):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
    logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username} (ID: {message.from_user.id}) | –ß–∞—Ç: {message.chat.id}")

logger.info("=" * 50)
logger.info("–ë–æ—Ç –ê–∫–∞–º–µ –∑–∞–ø—É—â–µ–Ω!")
logger.info(f"–°–æ–∑–¥–∞—Ç–µ–ª—å: {CREATOR_ID}")
logger.info(f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã: {MODERATOR_IDS}")
logger.info(f"–í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥: 12")
logger.info("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
logger.info("–†–ü –∫–æ–º–∞–Ω–¥—ã: a:kill, a:hug, a:kiss, a:myr, a:slap")
logger.info("–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã: a:help, a:new, /start")
logger.info("–ú–æ–¥–µ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã: !mute (@—é–∑–µ—Ä–Ω–µ–π–º/–æ—Ç–≤–µ—Ç), !unmute, a:staffcmd")
logger.info("–ö–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è: !addmod, !delmod, !modlist")
logger.info("=" * 50)

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
print(f"–°–æ–∑–¥–∞—Ç–µ–ª—å: {CREATOR_ID}")
print(f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã: {MODERATOR_IDS}")
print("–õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —Ñ–∞–π–ª: bot.log")
print("–ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–∫–ª—é—á–µ–Ω–æ (15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∫—Ä–æ–º–µ –†–ü)")
bot.polling(none_stop=True)
