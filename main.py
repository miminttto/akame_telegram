import telebot
from telebot import types
import requests
import time
import random
import datetime

bot = telebot.TeleBot('8351445452:AAEUwAJMPYaam8VTUVgyZVGCplnj6Sey7Ok')

user_last_messages = {}

# –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –ø–æ—Ü–µ–ª—É–µ–≤
kiss_actions = ["–ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞)", "—á–º–æ–∫–Ω—É–ª(–∞)", "–Ω–µ–∂–Ω–æ –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞)"]

actions = [
    "—É–±–∏–ª(–∞)", "–ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–ª(–∞)", "—É–Ω–∏—á—Ç–æ–∂–∏–ª(–∞)",
    "–ø—Ä–∏–∫–æ–Ω—á–∏–ª(–∞)", "–æ—Ç–ø—Ä–∞–≤–∏–ª(–∞) –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç", "–ª–∏—à–∏–ª(–∞) –∂–∏–∑–Ω–∏"
]

hugs = ["–æ–±–Ω—è–ª(–∞)", "–ø—Ä–∏–∂–∞–ª—Å—è(–∞—Å—å) –∫", "–æ–±–Ω—è–ª(–∞) –∫—Ä–µ–ø–∫–æ", "–æ–±–Ω—è–ª(–∞) –Ω–µ–∂–Ω–æ"]

# –î–æ–±–∞–≤–ª—è–µ–º –≥–∏—Ñ–∫–∏ –¥–ª—è –ø–æ—Ü–µ–ª—É–µ–≤
kiss_gifs = [
    "https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3NXFvODJzOG85aXh0eXl0aG9ia3Q4NWh1bTdsbzY4ejMwNWE4cmc1cCZlcD12MV9naWZzX3JlbGF0ZWQmY3Q9Zw/jR22gdcPiOLaE/giphy.gif",  # –ê–Ω–∏–º–µ –ø–æ—Ü–µ–ª—É–π
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExM2R0cTlsaTl2bWxzNHc0OXhxY3JoZm51enlhZ3Vmempkd2tlMmVnbSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/zkppEMFvRX5FC/giphy.gif",  # –ú–∏–ª—ã–π –ø–æ—Ü–µ–ª—É–π
]

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–∞–±–æ—á–∏–µ –≥–∏—Ñ–∫–∏ –¥–ª—è –æ–±—ä—è—Ç–∏–π
hug_gifs = [
    "https://media.giphy.com/media/od5H3PmEG5EVq/giphy.gif",  # –ê–Ω–∏–º–µ –æ–±—ä—è—Ç–∏—è
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExdGZ5Z3locDlrOTR4ZjJmc2dxdGIxMHc3dGx4ZnViY29xdHRjeDNrMCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/u9BxQbM5bxvwY/giphy.gif",  # –ê–Ω–∏–º–µ –ø–∞—Ä–æ—á–∫–∞
]

glav = types.InlineKeyboardMarkup(row_width=1)

new1 = types.InlineKeyboardMarkup(row_width=1)
new2 = types.InlineKeyboardButton("–ù–æ–≤–∏–Ω–∫–∞", callback_data='new3')

help1 = types.InlineKeyboardMarkup(row_width=1)
help2 = types.InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data='help3')

glav.add(help2, new2)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown —Å–∏–º–≤–æ–ª–æ–≤
def escape_markdown(text):
    escape_chars = r'_*[]()~`>#+-=|{}.!'
    return ''.join(['\\' + char if char in escape_chars else char for char in text])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
def log_command(user_id, username, command, target=None, chat_type="private"):
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    log_message = f"[{timestamp}] –Æ–∑–µ—Ä: @{username}, –ö–æ–º–∞–Ω–¥–∞: {command}, –ß–∞—Ç: {chat_type}"
    if target:
        log_message += f", –¶–µ–ª—å: {target}"

    print(log_message)

    with open("bot_logs.txt", "a", encoding="utf-8") as f:
        f.write(log_message + "\n")

#–ö–ù–û–ü–ö–ò
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == 'help3':
        log_command(call.from_user.id, call.from_user.username or call.from_user.first_name, "help_button")
        bot.send_message(call.message.chat.id, '–¢—É—Ç –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\n\nakame:kill [—é–∑–µ—Ä–Ω–µ–π–º] - —É–±–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\nakame:new - –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã\nakame:hug [—é–∑–µ—Ä–Ω–µ–π–º] - –æ–±–Ω—è—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\nakame:kiss [—é–∑–µ—Ä–Ω–µ–π–º] - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\n\nüî•–°–æ–∑–¥–∞—Ç–µ–ª—å @treplebeska\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –ø—Ä–∏–¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–∞ –¥—Ä—É–≥–æ–π —Å–µ–≤—Ä–µ—Ä –∏–ª–∏ –≥—Ä—É–ø–ø—É –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω!')
    elif call.data == 'new3':
        log_command(call.from_user.id, call.from_user.username or call.from_user.first_name, "new_commands_button")
        bot.send_message(call.message.chat.id, '–ù–æ–≤–∏–Ω–∫–∞!!!\n\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ 02.10.2025\n\n–î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã:\nakame:kill\nakame:hug\nakame:kiss\n\n–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n–î–æ–±–∞–≤–ª–µ–Ω—ã –≥–∏—Ñ–∫–∏ –∫ –∫–æ–º–∞–Ω–¥–∞–º akame:hug –∏ akame:kiss')

@bot.message_handler(content_types=['text'])
def handle_all_messages(message):
    user_id = message.from_user.id
    text = message.text.strip()
    username = message.from_user.username or message.from_user.first_name

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
    chat_type = "group" if message.chat.type in ["group", "supergroup"] else "private"

    user_last_messages[user_id] = text

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –≥—Ä—É–ø–ø–∞—Ö –∏ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    if text.lower().startswith('akame:help'):
        log_command(user_id, username, "akame:help", chat_type=chat_type)
        bot.send_message(message.chat.id, '–¢—É—Ç –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\n\nakame:kill [—é–∑–µ—Ä–Ω–µ–π–º] - —É–±–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\nakame:new - –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã\nakame:hug [—é–∑–µ—Ä–Ω–µ–π–º] - –æ–±–Ω—è—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\nakame:kiss [—é–∑–µ—Ä–Ω–µ–π–º] - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\n\nüî•–°–æ–∑–¥–∞—Ç–µ–ª—å @treplebeska\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –ø—Ä–∏–¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–∞ –¥—Ä—É–≥–æ–π —Å–µ–≤—Ä–µ—Ä –∏–ª–∏ –≥—Ä—É–ø–ø—É –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω!')

    # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ö–û–î –î–õ–Ø AKAME:KISS
    if text.lower().startswith('akame:kiss'):
        try:
            target = message.text[11:].strip()

            if not target:
                bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏ —Ü–µ–ª—å: `akame:kiss [–∏–º—è]`")
                return

            kisser = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name

            kiss_action = random.choice(kiss_actions)
            gif_url = random.choice(kiss_gifs)

            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - —É–±–∏—Ä–∞–µ–º Markdown —Ä–∞–∑–º–µ—Ç–∫—É –¥–ª—è –≥–∏—Ñ–∫–∏
            kiss_message = f"üíã {kisser} {kiss_action} {target}!"

            log_command(user_id, username, "akame:kiss", target, chat_type)

            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–∏—Ñ–∫—É, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            try:
                bot.send_animation(message.chat.id, gif_url, caption=kiss_message)
            except Exception as gif_error:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∏—Ñ–∫–∏: {gif_error}")
                bot.reply_to(message, kiss_message)

        except Exception as e:
            log_command(user_id, username, "akame:kiss_error", str(e), chat_type)
            bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    if text.lower().startswith('akame:kill '):
        try:
            target = message.text[11:].strip()

            if not target:
                bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏ —Ü–µ–ª—å: `akame:kill [–∏–º—è]`")
                return

            killer = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name

            action = random.choice(actions)

            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º–µ–Ω–∞ –¥–ª—è Markdown
            killer_escaped = escape_markdown(killer)
            target_escaped = escape_markdown(target)

            kill_message = f"‚öîÔ∏è **{killer_escaped}** {action} **{target_escaped}**!"

            log_command(user_id, username, "akame:kill", target, chat_type)
            bot.reply_to(message, kill_message, parse_mode='Markdown')

        except Exception as e:
            log_command(user_id, username, "akame:kill_error", str(e), chat_type)
            bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    if text.startswith('/start'):
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç —è –ê–∫–∞–º–µ.\n–Ø —Å–æ–∑–¥–∞–Ω–∞ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –≥—Ä—É–ø–ø—É –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è!', reply_markup=glav)

    if text.lower().startswith('akame:new'):
        log_command(user_id, username, "akame:new", chat_type=chat_type)
        bot.send_message(message.chat.id, '–ù–æ–≤–∏–Ω–∫–∞!!!\n\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ 02.10.2025\n\n–î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã:\nakame:kill\nakame:hug\nakame:kiss\n\n–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n–î–æ–±–∞–≤–ª–µ–Ω—ã –≥–∏—Ñ–∫–∏ –∫ –∫–æ–º–∞–Ω–¥–∞–º akame:hug –∏ akame:kiss')

    if text.lower().startswith('akame:hug'):
        try:
            target = message.text[10:].strip()

            if not target:
                bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏ —Ü–µ–ª—å: `akame:hug [–∏–º—è]`")
                return

            huger = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name

            hug = random.choice(hugs)
            gif_url = random.choice(hug_gifs)  # –°–ª—É—á–∞–π–Ω–∞—è –≥–∏—Ñ–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞

            hug_message = f"ü§ó {huger} {hug} {target}!"

            log_command(user_id, username, "akame:hug", target, chat_type)

            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–∏—Ñ–∫—É, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            try:
                bot.send_animation(message.chat.id, gif_url, caption=hug_message)
            except Exception as gif_error:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∏—Ñ–∫–∏: {gif_error}")
                bot.reply_to(message, hug_message)

        except Exception as e:
            log_command(user_id, username, "akame:hug_error", str(e), chat_type)
            bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö
    if chat_type in ["group", "supergroup"] and f"@{bot.get_me().username}" in text.lower():
        bot_text = text.replace(f"@{bot.get_me().username}", "").strip()

        if bot_text.lower().startswith('kill '):
            try:
                target = bot_text[5:].strip()

                if not target:
                    bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏ —Ü–µ–ª—å: `kill [–∏–º—è]`")
                    return

                killer = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name

                action = random.choice(actions)

                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º–µ–Ω–∞ –¥–ª—è Markdown
                killer_escaped = escape_markdown(killer)
                target_escaped = escape_markdown(target)

                kill_message = f"‚öîÔ∏è **{killer_escaped}** {action} **{target_escaped}**!"

                log_command(user_id, username, "akame:kill", target, chat_type)
                bot.reply_to(message, kill_message, parse_mode='Markdown')

            except Exception as e:
                log_command(user_id, username, "akame:kill_error", str(e), chat_type)
                bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

        elif bot_text.lower().startswith('hug '):
            try:
                target = bot_text[4:].strip()

                if not target:
                    bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏ —Ü–µ–ª—å: `hug [–∏–º—è]`")
                    return

                huger = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name

                hug = random.choice(hugs)
                gif_url = random.choice(hug_gifs)  # –°–ª—É—á–∞–π–Ω–∞—è –≥–∏—Ñ–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞

                hug_message = f"ü§ó {huger} {hug} {target}!"

                log_command(user_id, username, "akame:hug", target, chat_type)

                # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–∏—Ñ–∫—É, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                try:
                    bot.send_animation(message.chat.id, gif_url, caption=hug_message)
                except Exception as gif_error:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∏—Ñ–∫–∏: {gif_error}")
                    bot.reply_to(message, hug_message)

            except Exception as e:
                log_command(user_id, username, "akame:hug_error", str(e), chat_type)
                bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

        elif bot_text.lower().startswith('help'):
            log_command(user_id, username, "akame:help", chat_type=chat_type)
            bot.reply_to(message, '–¢—É—Ç –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\n\nakame:kill [—é–∑–µ—Ä–Ω–µ–π–º] - —É–±–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\nakame:new - –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã\nakame:hug [—é–∑–µ—Ä–Ω–µ–π–º] - –æ–±–Ω—è—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\nakame:kiss [—é–∑–µ—Ä–Ω–µ–π–º] - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\n\nüî•–°–æ–∑–¥–∞—Ç–µ–ª—å @treplebeska')

bot.polling(none_stop=True)